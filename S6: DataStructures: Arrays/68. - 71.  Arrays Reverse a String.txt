class MyArray {
    constructor() {
        this.length = 0;
        this.data = {}
    }
    get(index){
        return this.data[index]
    }
    push(item)  {
        this.data[this.length] = item;
        this.length++
        return this.length
    }
    pop() {
        const lastItem = this.data[this.length-1]
        delete this.data[this.length-1]
        this.length--
        return lastItem
    }
    delete(index) {
        const item = this.data[index]
        this.shiftItems(index)
    }
    shiftItems(index) {
        for(let i = index; i < this.length - 1; i++) {
            this.data[i] = this.data[i+1]
        }
        delete this.data[this.length-1]
        this.length--
    }
}

70. Reverse a String
// My solution
let string = 'This is a String'
function reverse(str){
  const arrayString = str.split('')
  const reversedStringArray = []
  console.log(arrayString)
  arrayString.map((char) => {
    reversedStringArray.unshift(char)
  })
  console.log(reversedStringArray)
  return reversedStringArray.join('')
}
reverse(string)
//Their solution
if (!str || str.length < 2 || typeof str !== 'string') {
    return 'Not passed a string'
}

const backwards = []
const totalItems = str.length - 1

for (let i = totalItems; i = 0; i--) {
    backwards.push(str[i])
}
return backwards.join('')

function reverse2(str) {
    return str.split('').reverse().join('')
}

const reverse3 = (str) => str.split('').reverse().join('')
const reverse4 = (str) => [...str].reverse().join('')

